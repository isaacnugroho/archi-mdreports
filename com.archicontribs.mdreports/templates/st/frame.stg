expandChildren(children) ::= <%
^children:{c |
  | ^elementLink(c, elementName(c))^  | ^elementLink(c, elementType(c))^  |^\n^
  ^if(c.Children)^
    ^expandChildren(c.Children)^
  ^endif^
}^
%>

expandChildrenRel(children) ::= <%
^children:{c |
  ^if(c.ArchimateElement)^
    ^if(c.SourceConnections)^
      ^c.SourceConnections:{r |
        ^if(r.ArchimateConcept)^
          | ^elementLink(r, r.Name)^  | ^elementLink(r, elementType(r))^  | ^elementLink(r.Source, elementName(r.Source))^  | ^elementLink(r.Target, elementName(r.Target))^  |^\n^
        ^endif^
      }^
    ^endif^
  ^endif^
  ^if(c.Children)^
    ^expandChildrenRel(c.Children)^
  ^endif^
}^
%>

expandAreasForChildren(children) ::= <%
^children:{c |
  ^if(c.Children)^
    ^expandAreasForChildren(c.Children)^
  ^endif^
  <area shape="rect" coords="^bounds(c, "X1")^,^bounds(c, "Y1")^,^bounds(c, "X2")^,^bounds(c, "Y2")^" title="^elementName(c)^" href="^elementRef(c)^/">^\n^
}^
%>

elementName(c) ::= <%
^if(c.Name && c.Name.Empty)^
  ^c.Class.SimpleName^
^else^
  ^c.Name^
^endif^
%>

elementFullName(c) ::= <%
^elementName(c)^
^if(element.Source)^
  ^\ ^(^elementName(c.Source)^^\ ^-^\ ^^elementName(c.Target)^)
^endif^
%>

elementType(c) ::= <%
^c.ArchimateConcept.Class.SimpleName^
^if(c.ArchimateConcept.PrimaryProfile)^
  ^\ ^(^c.ArchimateConcept.PrimaryProfile.Name^)
^endif^
%>

elementLink(c, title) ::= <%
[^title^](^elementRef(c)^)
%>

elementRef(c) ::= <%
^if(c.ArchimateConcept)^
  ../../elements/^c.ArchimateConcept.Id^
^elseif(c.ReferencedModel)^
  ../../views/^c.ReferencedModel.Id^
^elseif(c.DiagramModel)^
  ../../views/^c.DiagramModel.Id^
^elseif(c.Bounds)^
  ../../objects/^c.Id^
^endif^
%>

nullOrEmpty(v) ::= "trim(^if(v)^ ^else^^v^^endif^)"

elementDescription(c) ::= <%
^if(nullOrEmpty(c.Documentation) && nullOrEmpty(c.Purpose) && nullOrEmpty(c.Content))^
(no documentation)
^else^
^c.Documentation^
^c.Purpose^
^c.Content^
^endif^
%>

listReferencingDiagrams(c, models) ::= <%
Usage in diagrams:^\n^
^if(models)^
  ^models:{r |
    ^\n^- ^elementLink(r, diagramViewpoint(r))^
  }^
^else^
  ^\n^!!! warning "Unused Element"^\n^
  ^\ ^^\ ^^\ ^^\ ^This element is not used in any views
^endif^
%>

diagramViewpoint(c) ::= <%
^elementName(c)^
^if(!nullOrEmpty(c.Viewpoint))^
  ^\ ^(^c.Viewpoint^)
^endif^
%>

bounds(c, pos) ::= "^map.(c.Id).(pos)^"

frame(element, map, models) ::= <<
---
hide:
- toc
- navigation
---

# ^elementFullName(element)^

^if(element.Children && !element.Bounds)^
![^element.Name^](../images/^element.Id^.png){ usemap="#^element.Id^map", class="diagram" }<map name="^element.Id^map">^expandAreasForChildren(element.Children)^</map>
^endif^

^elementDescription(element)^

^if(!element.DiagramModel)^
## Analysis

^listReferencingDiagrams(element, models)^
^endif^

## Properties

| Key   | Value |
|-------|-------|
| Id  | ^element.Id^  |
^if(element.Viewpoint)^
| Viewpoint  | ^element.Viewpoint^  |
^endif^
| Class  | ^element.Class.SimpleName^  |
| Specialization  | ^element.ArchimateConcept.PrimaryProfile^  |
^element.Properties:{p |
| ^p.Key^  | ^p.Value^  |
}^

^if(element.Children)^
## Elements

| Name | Type |
|------|------|
^expandChildren(element.Children)^
## Relationships

| Name | Type | Source | Target |
|------|------|--------|--------|
^expandChildrenRel(element.Children)^^endif^
>>
